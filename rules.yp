ident   : /[a-zA-Z_][a-zA-Z0-9_]*/;
num     : /[0-9]+/;
string  : /\"(\\\\.|[^\"])*\"/;
char    : /\'.\'/;

factor  : '(' <nval> ')'
        | <num>
        | <char>
        | <ident> '(' <val>? (',' <val>)* ')'
        | <ident> ;

term    : <factor> (('*' | '/' | '%') <factor>)*;

strfact : '(' <strval> ')'
        | <string>;

strval  : <strfact> (("++" <strfact>) | ("**" <term>))*;

nval    : <term> (('+' | '-') <term>)*;

val     : <func>
        | <nval>
        | <strval> ;

expr    : <nval> ('>' | '<' | ">=" | "<=" | "==" | "!=") <nval>;

param   : <ident> ':' <ident>;
func    :  "fn" '(' <param>? (',' <param>)* ')' '{' <body> '}';

let     : "let" "pub"? "const"? <ident> ((':' <ident>)? '=' <val>)? ';';
if      : "if" <expr> <block>;
while   : "while" <expr> <block>;
switch  : "switch" <ident> '{' ("case" <val> "=>" <block>)* ("else" "=>" <block>) '}';

block   : (('{' <body> '}')? | <body>);
body    : <let>* <if>* <while>* <switch>* (<val> ';')*;

prog    : /^/ <let>* /$/;
